File类常用的API介绍：
java.io.File用来表示文件（目录）我们就可以操作硬盘上的文件和目录。
File类值用来表示用于表示文件（目录）的信息（名称，大小等），不能用于文件内容的访问。

[1]创建File文件对象  param： 文件地址
File file = new File("E:\\javaio");  or new File("E:" + File.sepatator);
File.sepatator  不同系统通用分隔符

file.exists()   文件或目录是否存在
file.mkdir()  创建文件夹
file.mkdirs()  创建层级文件夹，不需要父级文件夹存在
file.isDirectory()  bool 是否是一个目录  如果是返回时TRUE，不是或者不存在返回FALSE
file.isFile()  bool 是否是一个文件

File file2 = new File("E:\\java\\test.txt");
File file2 = new File("E:\\java","test.txt");

file2.delete();  删除文件
file2.createNewFile();  创建文件
常用的FILE对象的API
打印file对象获得文件目录  等效于 file.getAbsolutePath()
file.getName() 如果是文件获得文件名，如果是文件夹过的文件名称
file.getParent()  父目录路径
file.getParentFile() File  父目录对象

file.length();获取文件大小。
file.getFormat();获取文件格式名。
file.createNewFile();创建新文件。
********************************************************************************
********************************************************************************
[2]RandomAccessFile使用
     1、RandomAccessFile java提供的对文件内容的访问，既可以读文件，也可以写文件。
     2、RandomAccessFile支持【随机】访问文件，可以访问文件的任意位置
     3、Java文件模型：在硬盘上的文件是byte byte byte存储的，是数据的集合
     4、打开文件：有两种模式rw读写、r只读
           RandomAccessFile raf=new RandomAccessFile(file,"rw");
           文件指针，打开文件时指针在开头pointer=0；
     5、写方法
           raf.write(int)--->只写一个字节（后8位），同时指针指向下一个位置，准备再次写入
     6、读方法
          int b=raf.read()----->读一个字节
     7、文件读写完成以后一定要关闭（Oracle官方说明）
********************************************************************************
********************************************************************************
1.IO流：输入流和输出流;(字节流和字符流)
2.字节流：InputStream、OutputStream;
    InputStream抽象了应用程序读取数据的方式;
    Outpustream抽象了应用程序写入数据的方式;
EOF=End 读到-1就读取结束
3.输入流的基本方法
 int b=in.read();读取一个字节无符号填充到int低八位。-1是EOF
 in.read(byte[]buf);读取数据填充到字节数据 buf中;
 in.read(byte[]buf,int start,int size)读取数据到字节数组buf从buf的start位置开始存放size长度的数据;
4.输出流的基本方法
out.write(int b)写入一个byte到流，b的低8位
out.write(byte[]buf)将buf字节数组都写入到流
out.write(byte[]buf,int start,int size);字节数组buf从start位置开始写size长度的字节到流